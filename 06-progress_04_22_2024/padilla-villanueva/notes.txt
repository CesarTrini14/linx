22 april 2024
- ayuda a simplificar las cosas a como las estan planteando
- me sugiri√≥ que en lugar de un vctor de un ceros y unos
- cinco tareas, manejaras 5 cerso y un uno, output de ejecutar un solo 0
- o un solo 1
- entonces es la red neuronal
- el pdf ya conclusite tus datos de confidencialidad y todo
- no he visto que te agreguen al otro grupo
- funcion de recompensa por tarea
- 70 segundos
- 10 segundos, no hay red neuronal
- hasta que haya una tarea ejecutar
-  si si hay una tarea a ejecutar, se echa una red neuronal a ejecutar
- transmision de datos como un vector independiente
- tienes dos  tipos de tareas
- tienes tres tipos de tareas
- transmision de potencia variable, tiempo fijo de ejecucion
- tipo de tarea potencia fija y ejecucion fija
- una tarea de potencia fija, pero tiempo de ejecucion variable, como en
  estatica, es una funcion que tiene un gradiente porque esta siendo
  proporcional el valor de potencia, a el tiempo total que se
  ejecuto, tienes 3 tareas
  - transmision tarea separada
  - inciden,
  - si una tarea no se genero, vector de datos, su prioridad se
    vuelve 0 en automatico
    - pero si tuviste varias tareas que se ejecutaron, hay que
      ver que tan importante es bajar esos datos, si su
      prioridad de t es baja, si a traves de la red neuronal
      decide que partes de la red neuronal se ejecutan
      - tres tareas:
      - la red neuronal se encarga de sopesarlas, relacionarlas cual de ellas
        ejecutar o retrasar.
        - ya no seran las 3 tareas al mismo tiempo, va a ser por lectura
        - toda la matriz de una sola tarea, no entra el 5*5, solo el 5*1, que
          decide se ejecuta en ese momento, decide se ejecuta o no
          - con respecto al vector de estado, potencia, derivadas de potencia,
            energia, si la decide ejecutar, evalua una reward function, y ve
            que tanto se acerco despues de ejecutarla
            - como vas por tarea, generas una reward function por tarea
            - decides si la retrasa que evalua cuanto se acerco el estado de
              carga a la frontera del 30%, seguimos corrieendo le controlador
              hasta que encuentra la tarea
              - vuelve a correr neuronal, decide si la ejecuta o no, con las
                prioridades y todo, vuelve a mandar un valor de recompensa
                - 97 orbitas, sumes todas las recompensas y las penalizaciones
                  y entonces en la siguiente iteracion de red, ella entre en
                  sus valores de recompensas, en la corrida pasada, fueron
                  acertadas y cuales no , cuales deben seguir penalizando y
                  cuales debe seguir premiando, eso es lo que entrena el
                  satelite en orbita
                  - con datos deb anco de prueba, etc, que tiene que sguir la
                    red neuronal, es mas, si quieres, en el primer ciclo que
                    no tenga ninguna tarea, que genere una serie de
                    recompensas de lo que es no hacer nada, asi tiene un punto
                    de referencia de no hacer nada, para que en la siguiente
                    iteracion, punto a por tareas ejecutadas, 100 por ciento
                    del estado de carga y no ejecutar nada,
                    - en la funcion del dcoto
                    - tiene que premiarse por tarea ejecutada
                    - si no se ejecuta la tarea, se multiplica por 0, se
                    - la funcion de recompensa es eficiencia, si no puntuas no
                      estas siendo eficiente
                      - tu funcion de recompensa, es un valor binario, 1 y 0
                      - se hace por tarea
                      - el de 1 y 0, vamos a hacerlo mas sencillo todavia,
                      - un single input and output
                      - pueda adelantar tareas, peuda retrasar tareas
                      - pueda a partir de datos historicos decidir cuando
                      - si las tareas no son de ejecucion sensible
                      - si es el espectrometro, decidir ejecutarse o
                        atrasarse
                        - no las peude retrasar, con el valro de la prioridad
                          de ejecucion
                          - seria un derivado, prioridad de ser ejecutado
                          - el siguiente paso, ella podra decir no la ejecute
                            pero no la puedo ejecutar hasta que vuelva a estar
                            en el punto en el que estoy ahorita
                            - vamos a quedarnos en lo que nos dejo el pdf
                            - una reward function por tarea
                            - una global, esto que el vienres platico
                            - una funcion condicional que simplifique mas
                            - el problema, que la red neuronal este conectada
                              o desconectada, dependiendo si es momento de
                              ejecutar una tarea o no, la ejecuto
                              si es momento de ejecutar una tarea, que la red
                              neuronal, mida, analice y reciba las entradas y
                              todo lo que se presenta, estado de carga,
                              potenica disponible en paneles, corriente
                              efectiva que los paneles le dan a la bateria,
                              todas esas cosas que entran a la red neuronal,
                              priemra y segunda derivada de potencia, de carga
                              el historico de los valores, el tiempo del
                              cronometro, y la matriz de propiedades del
                              vector de la tarea, con que ahorita entregue la
                              tarea, decida si se ejecuta si  ono
                              - noimporta si la priemra capa o la segunda capa
                                tiene tantas neuronas, eso no importa
                                - yo el viernes le propuse que fuera 2 a la n
                                  tareas, es lo de menos ahorita, vamos
                                  - las entradas y las salidas
                                  - entradas todo eso, salida un 1 o 0
                                  - todo eso va a la reward function
                                  - el controlador bateria
                                  - de nuevo, si se vuelve a encontrar con la
                                    tarea, vuelve a pedir el mismo proceso
                                    - los valores de la funcion de
                                      recompensa, las suma al final del
                                      periodo
                                    - la funcion de transmision sea
                                      independiente, se lleve un beun control
                                      de eso
                                    - que ahi tiene el controlador
                                    - la tarea de download va a tener su
                                      tiempo de descarga, 0,0, donde se puede
                                      descargar un valor
                                      - va a tener su priorida de descarga,
                                        su prioridad de ejecucion, que si
                                        tengo las suficientes tareas con
                                        prioridad alta, decidiremos cuales
                                        descargar, tendra su ventana de
                                        descarga, de potenica variable y
                                        tiempo fijo
                                        - va a ser crucial para evaluar la
                                          red neuronal
 - potencia sobre dato, por numero de
   datos, por volumen de datos
            - es una prioridad que retroalimenta
- cuales dejar para despues, cuales para mas adelante
- tendria como tiempo de prioridad de ejecucion sobre el tiempo de ejecucion,
  uno, porque no se puede ejecutar en ningun otro punto
- la 2408 es la banda s
- meterle mas elementos de discresion
- por lo que se ha estado platicando, es que los datos se descargan por la
  banda s
- banda s es para nanosatelites y va de 2 a 4 gigahertz
- tiene menor latencia y mayor reliability fiabilidad, alcance
- tarea, lo primordial que haga selflearning
- si la quieres preentrenar, queria que platicaramos
- no pierdan el tiempo con el entrenamiento
- las funciones las teniamos
- la funcion va por fuera de la red, cada vez que decida o hacer una tarea,
  puntua
- la linea roja es energia
- la linea azul es la potencia de los paneles solares
- datos realistas, si quieren implementar el controlador, etc no es necesario,
- porque lo que queremos es simulacion, queremos algoritmos
- con que ahorita tengamos esa funcion senoidal, es mas que suficiente
- ya que el controlador la genera
- tenemos tiempos Is
- timedelta es el tiempo de muestreo, que no son el mismo. es un minuto
- vector de tareas, delta triangulito, cuanto dura la tarea, prioridad de
  descarga
  - propiedades intrinsecas. potencia para ejecutar y potencia requerida para
    descargar
- todo esto, status information
- es lo que tiene que entrar a la red neuronal
- el valor de la energia, potencia
derivada de la potencia, segunda derivada de potencia
primera derivada de energia y seguda
numpy gradiente de numpy, calcula funciones analiticas, esto no va a ser
analitico, va a ser muestral, es calcular derivadas de 3 puntos, asi es como
mi controlador calcula las derivadas
-cuantos datos genero la tarea 1 y 2 que es el vector que antes mencione
- vector de ejecucion
- es el que les planteaba como vector de 0 y 1: uno si fue ejecutada y 0 si no
- eso tambien es un estado
- no para la manera que yo planteee, estamos yendo tarea por tarea,
  completamente desarrollado, mi intencion cuando este metiendo metodos de IA
  - cuando estemos usando MDP markov, redes de DQN, si vamos a tener estos en su
    full
- este va a ser un output 0 1 por tarea
- ahi esta la funcion de recompensa, esta Sj es fue ejecutada o no, si no fue
  ejecutada es 0 y cancela todo
- Pj_R es la potencia que tomaba o tomo ejecutar esa tarea
- exponential (que va a tener en su exponente es una funcion normal, entre una
  varianza, cuales fueron las distancias entre t_j_E t_j_R, momento en el que se
  ejecuto y en el momento en el que tuvo que haberse ejecutado,
- la potencia P_j_D si se descargo o no
-dj si se descargo  o no
- g(k) definida en la parte de abajo, no es tan importante
va a depender del valor de k
- no se metan en rollos, no es importante considerar esa funcion de peso
- ese algoritmo es el que quiere, pero no es el mas optimo
- la funci√≥n global la podemos omitir por el momento
- cuanta recompensa produjo o rest√≥
- queremos que la red funcione y comparar distintos tipos de valores de
  recompensa
- es lo unico que queremos hacer ahorita
- tambien podemos omitir la funcion global de recompensa
- tengo un factor alfa, que es un peso del esttado de carga, una funcion de
  bondad
- que le interesa definir como j o 2j
-Tiene que ver con la salud de la bateria, la manejamos como uno por el momento,
para desarrollos posteriores, si la acercamos mas al 30%, cerca
- que es lo que conviene mas, no volver a cargarla, del 95 a 80, de eso va al
  alfa
- N es el numero de puntos de muestreo
- Tengo otra funci√≥n iterativa, donde tengo los thresholds, boundaries es una
  funcion de medicion entre los thresholds y los valores de energia, en  la
  grafica de energia, eso es cada elemento de la segunda funcion
- no estoy de acuerdo, pero hay que hacerlo asi para bajar la presion del equipo
- con ese valor de recompensa o de bondad, se vaya a entrenando la red, para
  saber que acciones han sido adecuadas, comparando con un historico que se va
  almacenando, se va ir borrando
- el valor de una orbita, dos orbitas, para saber en que punto estas
- para saber si estas perjudicando tus estados de carga, incluye tus valores
  como el alfa que tiene la salud de la bateria
- si estas acercandote muy peligrosamente a los valroes bajos del e stado de
  carga
  - si todo funciona, si tu red neuronal esta salvando de situaciones
    peligrosas.
- controlador, condicional, red neuronal, recompensa y retroalimentacion
- lo que nos diga leo, lo que tengan listo, para el dia de ma√±ana y rotamos,
  para que vayan ustedes tomando lo mejor de los elementos del equipo
- la idea de rotarnos, es que cada uno en tiempos distintos aporte sus
  fortalezas un entrenamiento todas las fortalezas posibles, cual es la que suma
  mas en el producto final
- lo que nos retroalimentaron, planteamos una nueva vision para la nueva semana
  y rotamos parejas
- vale
